use productDB  //To create a product database
//To create collection in database
 db.createCollection("products")

//To insert datas into collection
db.newProducts.insertMany


1. Find all the information about each products

Query: " db.products.find().pretty() "


2. Find the product price which are between 400 to 800

Query: " db.products.find({product_price:{$gt:400,$lt:800}}).pretty() "


3.Find the product price which are not between 400 to 600

Query: " db.products.find({product_price:{$not:{$gt:400,$lt:600}}}).pretty() "


4.List the four product which are greater than 500 in price
Query: " db.products.find({product_price:{$gt:500}}).limit(4) "

5.Find the product name and product material of each products
Query: " db.products.find({},{product_name:1,product_material:1}).pretty() "

6.Find the product with a row id of 10
Query:"db.products.findOne({"id":'10'}) "

7.Find only the product name and product material

Query: " db.products.find({},{_id:0,product_name:1,product_material:1})"


8. Find all products which contain the value of soft in product material 

Query: " db.products.find({product_material:"Soft"}) "

9. Find products which contain product color indigo  and product price 492.00

Query: " db.products.find({product_color:"indigo",product_price:492}) "

10. Delete the products which product price value are same

Query: " var duplicates=db.newProducts.aggregate([
    {
        $group:
        {
            _id:"$product_price",
            count:{$sum:1},
            ids:{$push:"$_id"}
        }
    },{
        $match:
        {
            count:{$gt:1}

        }
    }
])
duplicates.forEach(function(doc){
    db.newProducts.deleteOne({_id:{$in:doc.ids.slice(1)}})
}) 


"

     